<?xml version="1.0" encoding="UTF-8"?>
<project name="hw3" default="dist" basedir=".">

  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>
  
  <!-- codebase properties -->
  <property name="computer_file_codebase" location="/cs/faculty/pazspm/public_html/cs290b/hw3/computer/"/>
  <property name="computer_web_codebase" value="http://www.cs.ucsb.edu/~pazspm/cs290b/hw3/computer/"/>  
  <property name="client_file_codebase" location="/cs/student/pazspm/public_html/cs290b/hw3/client/"/>
  <property name="client_web_codebase" value="http://www.cs.ucsb.edu/~pazspm/cs290b/hw3/client/"/>

  <!-- connection properties -->
  <property name="space_ip" value="128.111.43.54"/>

  <target name="compile" description="compile the source">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>  
  
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"/>
  </target>

  <target name="dist" depends="compile" description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Make computer jar file -->
    <jar jarfile="${dist}/computer.jar" basedir="${build}" includes="system/** api/** tasks/**"/>
    
    <!-- Make client jar file -->
    <jar jarfile="${dist}/client.jar" basedir="${build}" includes="client/** api/** tasks/** system/**"/>
    
    <!-- Copy client's task classes to client's codebase --> 
    <mkdir dir="${client_file_codebase}/tasks"/>
    <copy todir="${client_file_codebase}/tasks">
      <fileset dir="${build}/tasks/"/>
    </copy>
  </target>
  
  <target name="javadoc" description="create javadocs">
  	<javadoc packagenames="tasks.*,api.*" sourcepath="${src}" destdir="documents/javadoc"/>
  </target>

  <target name="runSpace" description="run space">
  	<java classname="system.SpaceImpl" fork="true">
          <jvmarg value="-Djava.rmi.server.useCodebaseOnly=false"/>
  	  <jvmarg value="-Djava.rmi.server.codebase=${computer_web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy/policy"/>
  	  <classpath>
  	    <pathelement location="dist/computer.jar"/>
  	  </classpath>
  	</java>
  </target>  

  <target name="runComputer" description="run computer">
  	<java classname="system.ComputerImpl" fork="true">
          <jvmarg value="-Djava.rmi.server.useCodebaseOnly=false"/>
  	  <jvmarg value="-Djava.rmi.server.codebase=${computer_web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy/policy"/>
	  <arg value="${space_ip}"/>
	  <arg value="OFF"/> <!-- ON or OFF-->
	  <arg value="MULTIPLE"/>  <!-- SINGLE or MULTIPLE-->	
  	  <classpath>
  	    <pathelement location="dist/computer.jar"/>
  	  </classpath>
  	</java>
  </target>  
  
  <target name="runClientFibonacci" description="run client fibonacci">
  	<java classname="client.ClientFibonacci" fork="true">
  	  <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
  	  <jvmarg value="-Djava.security.policy=policy/policy"/>
  	  <arg value="${space_ip}"/>
	  <arg value="20"/>
  	  <classpath>
  	    <pathelement location="dist/client.jar"/>
  	  </classpath>
  	</java>
  </target>

  <target name="runClientTsp" description="run client tsp">
    <java classname="client.ClientEuclideanTsp" fork="true">
      <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
      <jvmarg value="-Djava.security.policy=policy/policy"/>
      <arg value="${space_ip}"/>
      <classpath>
        <pathelement location="dist/client.jar"/>
      </classpath>
    </java>
  </target>
  <target name="clean" description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${client_file_codebase}/tasks"/>
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  
</project>
